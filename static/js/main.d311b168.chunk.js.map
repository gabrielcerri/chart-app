{"version":3,"sources":["components/App.js","components/DrawerChart.js","components/Header.js","components/Layout.js","components/Home.js","api/population.js","components/Chart.js","index.js"],"names":["App","path","exact","DrawerChart","history","useHistory","useDisclosure","isOpen","onOpen","onClose","btnRef","React","useRef","cursor","bg","color","_active","borderColor","_focus","outline","_hover","onClick","size","icon","faBars","placement","finalFocusRef","isActive","as","Button","rightIcon","faChevronDown","push","Header","minH","w","direction","justify","align","p","fontSize","Layout","children","flex","Home","isTruncated","getPopulation","a","window","fetch","response","ok","Error","data","json","Chart","useState","loading","countries","error","state","setState","console","log","useEffect","results","message","doFetchCountries","dynamicLabels","map","country","name","dynamicData","population","dynamicRegion","slice","region","genData","labels","datasets","label","backgroundColor","borderWidth","options","responsive","title","text","display","scales","xAxes","type","ticks","autoSkip","gridLines","yAxes","h","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d311b168.chunk.js","sourcesContent":["import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Layout, Home, Chart } from \"./\";\n\nexport const App = () => {\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route path=\"/chart\">\n            <Chart />\n          </Route>\n          <Route path=\"/\" exact>\n            <>\n              <Home />\n            </>\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n  );\n};\n","import React from \"react\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Button,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const DrawerChart = () => {\n  const history = useHistory();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n\n  return (\n    <>\n      <Button\n        cursor=\"pointer\"\n        bg=\"black\"\n        color=\"white\"\n        _active={{\n          bg: \"#beb6b6\",\n          borderColor: \"none\",\n        }}\n        _focus={{\n          outline: \"none\",\n        }}\n        _hover={{\n          bg: \"#464545\",\n        }}\n        onClick={onOpen}\n      >\n        <FontAwesomeIcon size=\"2x\" icon={faBars}></FontAwesomeIcon>\n      </Button>\n      <Drawer\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay>\n          <DrawerContent>\n            <DrawerCloseButton />\n            <DrawerHeader>Choose an option</DrawerHeader>\n\n            <DrawerBody>\n              <Menu>\n                {({ isOpen }) => (\n                  <>\n                    <MenuButton\n                      isActive={isOpen}\n                      as={Button}\n                      rightIcon={<FontAwesomeIcon icon={faChevronDown} />}\n                    >\n                      {isOpen ? \"Close\" : \"By region\"}\n                    </MenuButton>\n                    <MenuList>\n                      <MenuItem onClick={() => history.push(\"/chart\")}>\n                        South America\n                      </MenuItem>\n                      <MenuItem onClick={() => history.push(\"/chart\")}>\n                        North America\n                      </MenuItem>\n                    </MenuList>\n                  </>\n                )}\n              </Menu>\n            </DrawerBody>\n          </DrawerContent>\n        </DrawerOverlay>\n      </Drawer>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Flex, Text } from \"@chakra-ui/react\";\nimport { DrawerChart } from \"./DrawerChart\";\n\nexport const Header = () => {\n  return (\n    <Flex\n      minH=\"5rem\"\n      w=\"full\"\n      bg=\"black\"\n      direction=\"row\"\n      justify=\"center\"\n      align=\"center\"\n      p=\"1rem 3rem\"\n    >\n      <DrawerChart />\n      <Text color=\"white\" as=\"samp\" fontSize=\"2xl\">\n        üìä chart country population üìä\n      </Text>\n    </Flex>\n  );\n};\n","import { Flex } from \"@chakra-ui/react\";\nimport { Header } from \"./Header\";\n\nexport const Layout = ({ children }) => (\n  <Flex direction=\"column\" minH=\"100vh\">\n    <Header />\n    <Flex flex={1} justify=\"center\" align=\"center\" direction=\"column\">\n      {\" \"}\n      {children}\n    </Flex>\n  </Flex>\n);\n","import React from \"react\";\nimport { Flex, Heading } from \"@chakra-ui/react\";\n\nexport const Home = () => {\n  return (\n    <Flex direction=\"column\">\n      <Heading as=\"h1\" size=\"4xl\" isTruncated>\n        {\" \"}\n        üó∫Ô∏è ¬°Welcome to chart-country-population! üó∫Ô∏è{\" \"}\n      </Heading>\n    </Flex>\n  );\n};\n","export const getPopulation = async () => {\n  const response = await window.fetch(\n    `https://restcountries.eu/rest/v2/region/americas`\n  );\n\n  if (!response.ok) {\n    throw new Error(\"Estamos teniendo problemas en el servidor, intenta luego\");\n  } else {\n    const data = response.json();\n    return data;\n  }\n};\n","import React from \"react\";\nimport { Flex, Spinner, Text } from \"@chakra-ui/react\";\nimport { getPopulation } from \"../api/population\";\nimport { HorizontalBar } from \"react-chartjs-2\";\n\nexport const Chart = () => {\n  const [state, setState] = React.useState({\n    loading: false,\n    countries: [],\n    error: null,\n  });\n\n  const { loading, countries, error } = state;\n\n  console.log(getPopulation());\n\n  React.useEffect(() => {\n    const doFetchCountries = async () => {\n      setState({ loading: true, countries: [], error: null });\n      try {\n        const results = await getPopulation();\n        setState({ loading: false, countries: results, error: null });\n      } catch (e) {\n        setState({ loading: false, countries: [], error: e.message });\n      }\n    };\n    doFetchCountries();\n  }, []);\n\n  const dynamicLabels = countries.map((country) => {\n    return country.name;\n  });\n\n  const dynamicData = countries.map((country) => {\n    return country.population;\n  });\n\n  const dynamicRegion = countries.slice(0, 1).map((country) => {\n    return country.region;\n  });\n\n  console.log(dynamicData);\n\n  const genData = {\n    labels: dynamicLabels,\n    datasets: [\n      {\n        label: \"Population\",\n        data: dynamicData,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n\n        borderColor: \"rgba(255, 99, 132, 1)\",\n\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    title: {\n      text: `Population of ${dynamicRegion} `,\n      display: true,\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"logarithmic\",\n          ticks: {\n            autoSkip: true,\n            display: false,\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n  };\n\n  if (loading) {\n    return (\n      <Flex align=\"center\" justify=\"center\" h=\"97vh\" w=\"100%\">\n        <Spinner size=\"xl\" />\n      </Flex>\n    );\n  } else if (error) {\n    <Text>{error}</Text>;\n  }\n\n  return (\n    <Flex width=\"90%\">\n      <HorizontalBar data={genData} options={options} />\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.css\";\nimport { App } from \"./components/index\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}